/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Res{
    int res=Integer.MIN_VALUE;
}
class Solution {
    public int maxPathSum(TreeNode root) {
        Res result=new Res();
        maxPathSum(root,result);
        return result.res;
    }
    public int maxPathSum(TreeNode root,Res result){
        if(root==null)
            return 0;
        int lsum=maxPathSum(root.left,result);
        int rsum=maxPathSum(root.right,result);
        int max_half=Math.max(Math.max(lsum,rsum)+root.val,root.val);
        int max_full=Math.max(max_half,lsum+rsum+root.val);
        result.res=Math.max(max_full,result.res);
        return max_half;
    }
}